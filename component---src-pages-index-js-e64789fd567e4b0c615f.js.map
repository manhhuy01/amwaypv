{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","props","_this","_React$Component","call","this","search","value","trim","products","filter","product","searchString","name","setState","concat","onChangeInput","e","target","onSearch","debounce","state","componentWillReceiveProps","nextProps","length","componentWillMount","getProducts","render","_this$props","isLoading","isGrid","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_9__","onDisplayClick","switchDisplay","_components_seo__WEBPACK_IMPORTED_MODULE_10__","title","keywords","_components_productBody__WEBPACK_IMPORTED_MODULE_11__","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","React","Component","connect","isDarkMode","productReducer","layoutReducer","dispatch","toggleDarkMode","bindActionCreators"],"mappings":"oPAsBMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAqBFC,OAAS,WACP,IAAIC,EAAQL,EAAKK,MAAMC,OACvB,GAAKD,EAAL,CAOA,IAAIE,EAAWP,EAAKD,MAAMQ,SAASC,OAAO,SAAAC,GAAO,OAAIC,YAAaL,EAAOI,EAAQE,QACjFX,EAAKY,SAAS,CACZL,SAAQ,GAAAM,OAAMN,UARdP,EAAKY,SAAS,CACZL,SAAQ,GAAAM,OAAMb,EAAKD,MAAMQ,aA1BZP,EAqCnBc,cAAgB,SAACC,GACff,EAAKK,MAAQU,EAAEC,OAAOX,MACtBL,EAAKiB,YArCLjB,EAAKiB,SAAWC,IAASlB,EAAKI,OAAQ,KACtCJ,EAAKmB,MAAQ,CACXZ,SAAU,IAJKP,sCAQnBoB,0BAAA,SAA0BC,GACpBA,EAAUd,SAASe,SAAWnB,KAAKJ,MAAMQ,SAASe,QACpDnB,KAAKS,SAAS,CACZL,SAAQ,GAAAM,OAAMQ,EAAUd,eAK9BgB,mBAAA,WACOpB,KAAKJ,MAAMQ,SAASe,QACvBnB,KAAKJ,MAAMyB,iBAwBfC,OAAA,WAAS,IAAAC,EACuBvB,KAAKJ,MAA3B4B,EADDD,EACCC,UAAWC,EADZF,EACYE,OACXrB,EAAaJ,KAAKgB,MAAlBZ,SACR,OACEsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,eAAgB9B,KAAKJ,MAAMmC,cAC3BN,OAAQA,EACRd,cAAeX,KAAKW,eAGpBe,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,MAAM,iBAAiBC,SAAU,qBAAuB9B,SAAUA,IAErEoB,EAAYE,EAAAC,EAAAC,cAAA,oCACVF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE/B,SAAUA,EACVqB,OAAQA,EACRD,UAAWA,IAGjBE,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,YAAT,qBA9DgBC,IAAMC,WAgFfC,sBAZS,SAAAxB,GAAK,MAAK,CAChCyB,WAAYzB,EAAM0B,eAAeD,WACjCrC,SAAUY,EAAM0B,eAAetC,SAC/BoB,UAAWR,EAAM0B,eAAelB,UAChCC,OAAQT,EAAM2B,cAAclB,SAGH,SAAAmB,GAAQ,MAAK,CACtCC,eAAgBC,YAAmBD,IAAgBD,GACnDvB,YAAayB,YAAmBzB,IAAauB,GAC7Cb,cAAee,YAAmBf,IAAea,KAEpCJ,CAA6C7C","file":"component---src-pages-index-js-e64789fd567e4b0c615f.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport debounce from 'lodash.debounce'\r\n\r\n// import lozad from 'lozad'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { toggleDarkMode } from '../containers/products/actions'\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n// import Card from '../components/card'\r\nimport ProductBody from '../components/productBody'\r\n\r\nimport { getProducts } from '../containers/products/actions'\r\nimport { switchDisplay } from '../containers/layout/actions'\r\n\r\nimport { searchString } from '../services/commonFuncs'\r\n\r\n\r\nclass IndexPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.onSearch = debounce(this.search, 300)\r\n    this.state = {\r\n      products: []\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.products.length !== this.props.products.length) {\r\n      this.setState({\r\n        products: [...nextProps.products]\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (!this.props.products.length) {\r\n      this.props.getProducts();\r\n    }\r\n  }\r\n\r\n  search = () => {\r\n    let value = this.value.trim()\r\n    if (!value) {\r\n      this.setState({\r\n        products: [...this.props.products]\r\n      })\r\n      return;\r\n    };\r\n\r\n    let products = this.props.products.filter(product => searchString(value, product.name))\r\n    this.setState({\r\n      products: [...products]\r\n    })\r\n  }\r\n\r\n  onChangeInput = (e) => {\r\n    this.value = e.target.value;\r\n    this.onSearch();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, isGrid } = this.props;\r\n    const { products } = this.state;\r\n    return (\r\n      <Layout\r\n        onDisplayClick={this.props.switchDisplay}\r\n        isGrid={isGrid}\r\n        onChangeInput={this.onChangeInput}\r\n      >\r\n        {/* <button onClick={toggleDarkMode}>Click me</button> */}\r\n        <SEO title=\"Sản phẩm Amway\" keywords={[`Amway`, `Sản phẩm`]} products={products} />\r\n        {\r\n          isLoading ? <div> Đang tải sản phẩm...</div> :\r\n            <ProductBody\r\n              products={products}\r\n              isGrid={isGrid}\r\n              isLoading={isLoading}\r\n            />\r\n        }\r\n        <Link to=\"/page-2/\">Go to page 2</Link>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isDarkMode: state.productReducer.isDarkMode,\r\n  products: state.productReducer.products,\r\n  isLoading: state.productReducer.isLoading,\r\n  isGrid: state.layoutReducer.isGrid,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDarkMode: bindActionCreators(toggleDarkMode, dispatch),\r\n  getProducts: bindActionCreators(getProducts, dispatch),\r\n  switchDisplay: bindActionCreators(switchDisplay, dispatch),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage)\r\n"],"sourceRoot":""}