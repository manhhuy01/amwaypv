{"version":3,"sources":["webpack:///./src/containers/products/actions.js","webpack:///./src/components/card.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/dataStructure.js","webpack:///./src/services/commonFuncs.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["toggleDarkMode","isDarkMode","type","TOGGLE_DARKMODE","Card","_ref","product","react_default","a","createElement","className","data-src","imageLink","alt","name","sku","description","pv","dp","cp","propTypes","PropTypes","object","defaultProps","connect","state","productReducer","products","dispatch","bindActionCreators","layout","seo","title","keywords","map","index","card","key","gatsby_browser_entry","to","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","DataStructure","dangerouslySetInnerHTML","__html","JSON","stringify","this","PureComponent","generateDataStructure","@context","@type","image","brand","offers","lowPrice","highPrice","priceCurrency","SEO","lang","meta","site","_2417117884","metaDescription","siteMetadata","Fragment","dataStructure","Helmet_default","htmlAttributes","content","property","author","concat","length","join","array","arrayOf","Header","siteTitle","Layout","componentDidMount","lozad","observe","_this","header","_2994927498","Component","node"],"mappings":"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","file":"component---src-pages-index-js-0fcc9b2d1e44023cecbe.js","sourcesContent":["import { TOGGLE_DARKMODE } from './constants'\r\n\r\nexport const toggleDarkMode = isDarkMode => ({\r\n    type: TOGGLE_DARKMODE, isDarkMode\r\n});","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Card = ({ product }) => (\r\n  <div className=\"card-container\">\r\n    <div className=\"img-container\"><img className=\"lozad\" data-src={product.imageLink} alt={product.name} /></div>\r\n    <div className=\"card-right-panel\">\r\n      <div className=\"card-info\">\r\n        <div> {product.sku}</div>\r\n        <div className=\"product-name\">{product.name}</div>\r\n        <div> {product.description}</div>\r\n        <div>\r\n          <div>{product.pv}</div>\r\n          <div>{product.dp}</div>\r\n          <div>{product.cp}</div>\r\n        </div>\r\n      </div>\r\n      <button className=\"card-button\">Thêm vào giỏ hàng</button>\r\n\r\n    </div>\r\n  </div>\r\n)\r\n\r\nCard.propTypes = {\r\n  product: PropTypes.object,\r\n}\r\n\r\nCard.defaultProps = {\r\n  product: {},\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { toggleDarkMode } from '../containers/products/actions'\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Card from '../components/card'\r\n\r\nconst IndexPage = ({ isDarkMode, toggleDarkMode, products }) => (\r\n  <Layout>\r\n    {/* <button onClick={toggleDarkMode}>Click me</button> */}\r\n    <SEO title=\"Sản phẩm Amway\" keywords={[`Amway`, `Sản phẩm`]} products={products} />\r\n    <div className=\"product-container\">\r\n      {\r\n        products.map((product, index) => <Card key={index} product={product} />)\r\n      }\r\n    </div>\r\n\r\n    <Link to=\"/page-2/\">Go to page 2</Link>\r\n  </Layout>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n  isDarkMode: state.productReducer.isDarkMode,\r\n  products: state.productReducer.products\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleDarkMode: bindActionCreators(toggleDarkMode, dispatch),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage)\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\n\r\nclass DataStructure extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <script\r\n        type=\"application/ld+json\"\r\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(this.props.data) }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default DataStructure\r\n","export const generateDataStructure = (products) => {\r\n  if (products)\r\n    return products.map(product => ({\r\n      \"@context\": \"https://schema.org/\",\r\n      \"@type\": \"Product\",\r\n      \"name\": product.name,\r\n      \"image\": product.imageLink,\r\n      \"brand\": {\r\n        \"@type\": \"Thing\",\r\n        \"name\": \"Amway\"\r\n      },\r\n      \"offers\": {\r\n        \"@type\": \"AggregateOffer\",\r\n        \"lowPrice\": product.dp,\r\n        \"highPrice\": product.cp,\r\n        \"priceCurrency\": \"VND\"\r\n      }\r\n    }))\r\n  return []\r\n}","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport DataStructure from './dataStructure'\r\nimport {generateDataStructure} from '../services/commonFuncs'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title, products }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const data = generateDataStructure(products)\r\n  return (\r\n    <>\r\n      <DataStructure data={data} />\r\n      <Helmet\r\n        htmlAttributes={{\r\n          lang,\r\n        }}\r\n        title={title}\r\n        meta={[\r\n          {\r\n            name: `description`,\r\n            content: metaDescription,\r\n          },\r\n          {\r\n            property: `og:title`,\r\n            content: title,\r\n          },\r\n          {\r\n            property: `og:description`,\r\n            content: metaDescription,\r\n          },\r\n          {\r\n            property: `og:type`,\r\n            content: `website`,\r\n          },\r\n          {\r\n            name: `twitter:card`,\r\n            content: `summary`,\r\n          },\r\n          {\r\n            name: `twitter:creator`,\r\n            content: site.siteMetadata.author,\r\n          },\r\n          {\r\n            name: `twitter:title`,\r\n            content: title,\r\n          },\r\n          {\r\n            name: `twitter:description`,\r\n            content: metaDescription,\r\n          },\r\n        ]\r\n          .concat(\r\n            keywords.length > 0\r\n              ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n              : []\r\n          )\r\n          .concat(meta)}\r\n      />\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header>\r\n    <div>\r\n      <h1>\r\n        <Link\r\n          to=\"/\"\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport lozad from 'lozad'\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nclass Layout extends React.Component {\r\n  componentDidMount() {\r\n    const observer = lozad(); // lazy loads elements with default selector as '.lozad'\r\n    observer.observe();\r\n  }\r\n  render() {\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n        query SiteTitleQuery {\r\n          site {\r\n            siteMetadata {\r\n              title\r\n            }\r\n          }\r\n        }\r\n      `}\r\n        render={data => (\r\n          <>\r\n            <Header siteTitle={data.site.siteMetadata.title} />\r\n            <main>{this.props.children}</main>\r\n            <footer>\r\n              Đây là footer\r\n            </footer>\r\n          </>\r\n        )}\r\n      />\r\n    )\r\n  }\r\n\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}